#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding utf8
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Pagerank
\end_layout

\begin_layout Author
Nicolas Chenciner & David Bühler
\end_layout

\begin_layout Section
Utilisation
\end_layout

\begin_layout Paragraph
Compilation
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Un makefile est fourni :
\end_layout

\begin_layout Quotation

\family typewriter
$ make
\end_layout

\begin_layout Standard
\begin_inset space ~
\end_inset


\end_layout

\begin_layout Standard
Java 
\begin_inset Formula $7$
\end_inset

 est nécessaire.
\end_layout

\begin_layout Paragraph
Exécution :
\end_layout

\begin_layout Quotation

\family typewriter
$ ./pagerank file [zap count epsilon z]
\end_layout

\begin_layout Paragraph
Options :
\end_layout

\begin_layout Itemize

\family typewriter
file
\family default
 : nom du fichier contenant la description du graphe.
\end_layout

\begin_layout Itemize

\family typewriter
zap
\family default
 : facteur zap (flottant) ; 0 par défaut.
\end_layout

\begin_layout Itemize

\family typewriter
count
\family default
 : nombre maximum d'itérations de l'algorithme ; 0 par défaut.
\end_layout

\begin_layout Itemize

\family typewriter
epsilon 
\family default
: distance maximale entre deux vecteurs successifs calculés par l'algorithme
 ; 0 par défaut.
\end_layout

\begin_deeper
\begin_layout Standard
L'algorithme de pagerank s'arrête dès lors que deux vecteurs successifs
 sont de différence moindre que 
\family typewriter
epsilon
\family default
 donné en argument, ou lorsque le nombre d'itérations 
\family typewriter
count
\family default
 a été effectué.
\end_layout

\begin_layout Standard
0 signifie donc que l'algorithme ne s'arrête que s'il a bien atteint la
 convergence du résultat.
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
z
\family default
 : facteur influant sur le vecteur initial utilisé par l'algorithme :
\end_layout

\begin_deeper
\begin_layout Itemize
si z est négatif, le vecteur initial est le vecteur 
\begin_inset Quotes fld
\end_inset

uniforme
\begin_inset Quotes frd
\end_inset

 dont chaque élément vaut 
\begin_inset Formula $1/\mathtt{length}$
\end_inset

 (comportement par défaut).
\end_layout

\begin_layout Itemize
si z est positif, le vecteur initial est le vecteur 
\begin_inset Formula $v$
\end_inset

 tel que 
\begin_inset Formula $v[z]=1$
\end_inset

 et 
\begin_inset Formula $\forall i\neq z,v[i]=0$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Paragraph
Format de fichier
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Les graphes sont décrits par des fichiers placés dans le répertoire 
\family typewriter
examples/
\family default
 tels que :
\end_layout

\begin_layout Itemize
les lignes vides ou commençant par le caractère # sont ignorées ;
\end_layout

\begin_layout Itemize
les autres lignes doivent être de la forme 
\begin_inset Quotes fld
\end_inset

i j
\begin_inset Quotes frd
\end_inset

, symbolisant un arc du sommet 
\begin_inset Formula $i$
\end_inset

 vers le sommet 
\begin_inset Formula $j$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Explication de code
\end_layout

\begin_layout Paragraph
Vect<T>
\end_layout

\begin_layout Standard
Classe paramétrée représentant un vecteur de type T ; plusieurs constructeurs
 permettent d'initialiser facilement un vecteur, à partir d'une liste, d'un
 tableau ou d'une valeur par défaut.
\end_layout

\begin_layout Paragraph
FVect
\end_layout

\begin_layout Standard
Vecteur de type float ; dispose des opérations d'addition et de multiplication
 par une constante, ainsi que du calcul de la norme entre deux vecteurs.
\end_layout

\begin_layout Paragraph
Matrix<T>
\end_layout

\begin_layout Standard
Matrice de type T, dans le format décrit par l'énoncé, avec les méthodes
 permettant d'accéder aux valeurs ou de les modifier.
\end_layout

\begin_layout Paragraph
FMatrix
\end_layout

\begin_layout Standard
Matrice de type float ; dispose des opérations de multiplication et de multiplic
ation 
\begin_inset Quotes fld
\end_inset

transposée
\begin_inset Quotes frd
\end_inset

 par un 
\family typewriter
FVect
\family default
.
\end_layout

\begin_layout Paragraph
Graph
\end_layout

\begin_layout Standard
Représentation d'un graphe, sous forme de hashmap.
 La méthode 
\family typewriter
stoch
\family default
 calcule la matrice stochastique associée de manière optimale.
 Contient également la méthode statique 
\family typewriter
zapPagerank
\family default
.
\end_layout

\begin_layout Paragraph
GraphParser
\end_layout

\begin_layout Standard
Lecture d'un fichier et construction du graphe associé.
\end_layout

\begin_layout Paragraph
Test
\end_layout

\begin_layout Standard
Exécution d'un test : construction du graphe à partir d'un fichier, calcul
 de la matrice stochastique, exécution de l'algorithme 
\emph on
pagerank
\emph default
 avec les paramètres donnés, affichage des résultats.
\end_layout

\begin_layout Paragraph
MainTest
\end_layout

\begin_layout Standard
Main, parsing des arguments, exécution du test.
\end_layout

\begin_layout Section
Complexité
\end_layout

\begin_layout Subsection
Multiplication d'une matrice par un vecteur
\end_layout

\begin_layout Standard
La méthode 
\family typewriter
mult_naive
\family default
 effectue un appel à 
\family typewriter
get
\family default
 pour chaque élément du tableau selon un parcours des lignes et des colonnes
 ; 
\family typewriter
get
\family default
 étant de complexité 
\begin_inset Formula $O(n)$
\end_inset

 (potentiellement une opération par colonne), elle opère donc en 
\begin_inset Formula $O(n^{3})$
\end_inset

, où 
\begin_inset Formula $n$
\end_inset

 est la longueur de la matrice carrée.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La méthode 
\family typewriter
mult
\family default
 est nettement plus efficace, puisqu'elle ne considère que les éléments
 non nuls de la matrice en cherchant directement dans les trois tableaux
 de la structure : elle effectue
\end_layout

\begin_layout Itemize
deux accès au tableau L pour chaque ligne ;
\end_layout

\begin_layout Itemize
pour chaque élément non nul, un accès à I, un accès à C, une multiplication
 et une addition.
\end_layout

\begin_layout Standard
Soit un nombre fixe d'opérations pour chaque ligne et chaque élément non
 nul.
\end_layout

\begin_layout Standard
Ce calcul est donc en 
\begin_inset Formula $O(n+m)$
\end_inset

 où 
\begin_inset Formula $n$
\end_inset

 est le nombre de lignes de la matrice et 
\begin_inset Formula $m$
\end_inset

 le nombre d'éléments non nul.
\end_layout

\begin_layout Subsection
Multiplication de la transposée d'une matrice par un vecteur
\end_layout

\begin_layout Standard
Bien que l'algorithme soit différent, la complexité est identique à celle
 de la multiplication de la matrice elle-même par un vecteur :
\end_layout

\begin_layout Itemize
deux accès à un tableau par ligne ;
\end_layout

\begin_layout Itemize
pour chaque élément non nul, trois accès à un tableau, deux opérations arithméti
ques, une écriture dans un tableau.
\end_layout

\begin_layout Standard
Soit un temps constant pour chaque élément non nul, et un temps constant
 par ligne : complexité en 
\begin_inset Formula $O(n+m)$
\end_inset

.
\end_layout

\begin_layout Section
Résultats et interprétation
\end_layout

\begin_layout Subsection
Exemples
\end_layout

\begin_layout Standard
Le répertoire 
\family typewriter
examples
\family default
/ contient quelques fichiers descriptifs de graphes simples et pertinents
 permettant de tester l'algorithme.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Notons au préalable que les résultats ne peuvent être garantis avec une
 précision supérieur à 
\begin_inset Formula $10^{-8}$
\end_inset

 ; seront donc considérés identiques des résultats ne différant que par
 leur huitième décimale après la virgule.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Description
convergence graphe fortement connexe, pgcd des longueurs des circuits 
\begin_inset Formula $=1$
\end_inset

 : convergence assurée quel que soit le vecteur initial (et c'est bien le
 résultat observé, ouf).
\end_layout

\begin_deeper
\begin_layout Standard
On note que la convergence est néanmoins légèrement plus rapide à partir
 du vecteur initial uniforme 
\begin_inset Formula $[0.25\,0.25\,0.25\,0.25]$
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
divergent graphe fortement connexe, mais dont le pgdc des longueurs des
 circuits vaut 
\begin_inset Formula $3$
\end_inset

 : la convergence n'est plus assurée.
\end_layout

\begin_deeper
\begin_layout Standard
Ainsi, si pagerank converge rapidement à partir du vecteur initial équiprobable,
 ce n'est plus le cas si l'on part d'un vecteur de type 
\begin_inset Formula $[1\,0\,0\,\ldots]$
\end_inset

.
\end_layout

\begin_layout Standard
En revanche, avec un facteur zap non nul fixé, pagerank converge vers un
 même résultat quel que soit le vecteur initial, mais encore une fois beaucoup
 plus rapidement à partir du vecteur 
\begin_inset Quotes fld
\end_inset

uniforme
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
Si ce résultat diffère de celui obtenu avec un facteur zap nul et un vecteur
 initial 
\begin_inset Quotes fld
\end_inset

uniforme
\begin_inset Quotes frd
\end_inset

, le classement des nœuds reste inchangé.
\end_layout

\begin_layout Standard
Plus le facteur zap est élevé, plus la convergence est rapide, mais moins
 les résultats sont pertinents : les nœuds du graphes tendent alors à obtenir
 des valeurs proches.
 Il s'agit donc de trouver un équilibre entre rapidité de la convergence
 et pertinence du résultat.
\end_layout

\end_deeper
\begin_layout Description
circular graphe circulaire, donc similaire au précédent : on observe alors
 les mêmes résultats, de manière encore plus flagrante.
\end_layout

\begin_layout Description
well ce graphe comporte un 
\begin_inset Quotes fld
\end_inset

puit
\begin_inset Quotes frd
\end_inset

 : des liens permettent d'accéder au nœud 
\begin_inset Formula $3$
\end_inset

, mais aucun d'en sortir.
\end_layout

\begin_deeper
\begin_layout Standard
Ainsi, sans facteur zap, pagerank converge (lentement) vers le vecteur nul,
 quel que soit le vecteur initial.
 Un facteur zap non nul corrige ce 
\begin_inset Quotes fld
\end_inset

problème
\begin_inset Quotes frd
\end_inset

.
\end_layout

\end_deeper
\begin_layout Description
petersen graphe symétrique cubique.
 Convergence assurée.
\end_layout

\begin_deeper
\begin_layout Standard
Appliqué à un graphe symétrique, si convergence il y a, alors pagerank converge
 vers le vecteur équiprobable (
\begin_inset Formula $1/\mathtt{size}$
\end_inset

 pour chaque nœuds).
 Le résultat est immédiat à partir d'un vecteur initial équiprobable, et
 peut être beaucoup plus long à propager sinon.
\end_layout

\begin_layout Standard
Néanmoins, la convergence n'est pas toujours assurée (cf graphe circulaire).
\end_layout

\end_deeper
\begin_layout Description
clique convergence assurée (clique implique fortement connexe et pgcd des
 longueurs des circuits 
\begin_inset Formula $=1$
\end_inset

).
\end_layout

\begin_deeper
\begin_layout Standard
Sur une clique, quel que soient le facteur zap et le vecteur initial, le
 résultat final sera nécessairement équiprobable (
\begin_inset Formula $1/\mathtt{size}$
\end_inset

 pour chaque nœuds).
\end_layout

\end_deeper
\begin_layout Subsection
Vecteur initial
\end_layout

\begin_layout Standard
Le vecteur initial, dont la somme des éléments vaut 
\begin_inset Formula $1$
\end_inset

, représente la probabilité de se trouver sur une page au début de l'algorithme.
 Le vecteur 
\begin_inset Quotes fld
\end_inset

équiprobable
\begin_inset Quotes frd
\end_inset

 (
\begin_inset Formula $1/\mathtt{size}$
\end_inset

 à chaque nœuds) offre ainsi une même importance à chaque page, alors qu'un
 vecteur 
\begin_inset Formula $[1\,0\,0\,\ldots]$
\end_inset

 parcourt le graphe à partir d'un seul nœud.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Sur la plupart des graphes, pagerank converge nettement plus rapidement
 à partir du vecteur 
\begin_inset Quotes fld
\end_inset

équiprobable
\begin_inset Quotes frd
\end_inset

, ce qui semble parfaitement logique : à partir d'un vecteur 
\begin_inset Formula $[1\,0\,0\,\ldots]$
\end_inset

, il faut le temps de propager les valeurs à tous les nœuds du graphe, les
 premières itérations de l'algorithme ne concerneront que les nœuds autour
 du premier ; et plus le graphe est grand, plus ce temps sera long.
 À partir du vecteur équiprobable, les premières itérations transmettent
 de l'information pour tous nœuds du graphe.
\end_layout

\begin_layout Standard
Qui plus est, le vecteur équiprobable est généralement plus proche du résultat
 (peu de nœuds finissent avec une valeur nulle).
\end_layout

\begin_layout Standard
Évidemment, il est également possible de construire un graphe où pagerank
 soit plus rapide à partir d'un autre vecteur (
\family typewriter
examples/node1
\family default
), mais ce type de graphe n'a que peu d'intérêt et n'a aucune chance d'être
 rencontré lors d'une analyse du web.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Sur les graphes dont le résultat dépend du vecteur initial, le résultat
 est plus cohérent à partir du vecteur équiprobable.
 Sur les graphes circulaires, par exemple, il attribue à chaque nœud une
 valeur égale, alors qu'un autre vecteur ne convergerait pas.
\end_layout

\begin_layout Standard
En particulier, sur un graphe non connexe, il permet d'attribuer une valeur
 non nulle à chaque composante, alors qu'un vecteur 
\begin_inset Formula $[1\,0\,0\,\ldots]$
\end_inset

, ne s'occuperait que de l'une d'elles.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
C'est pour toutes ces raisons que notre algorithme utilise le vecteur équiprobab
le par défaut.
\end_layout

\begin_layout Subsection
Facteur zap
\end_layout

\begin_layout Standard
Le facteur ZAP représente, dans le modèle du surfeur imaginaire sur lequel
 se base le PageRank, la probabilité que le dit surfeur arrête de cliquer
 sur les liens et choisisse d'aller à une page aléatoire.
 
\end_layout

\begin_layout Standard
On peut clarifier ceci en prenant les deux cas extrêmes :
\end_layout

\begin_layout Itemize
ZAP = 0 : le surfeur clique inlassablement sur les liens.
\end_layout

\begin_layout Itemize
ZAP = 1 : le surfeur ne clique jamais sur les liens, il ne fait que sauter
 aléatoirement de page en page.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Un facteur ZAP non nul fait converger plus vite le PageRank de chaque page.
 Un exemple flagrant de ce phénomène est notre exemple 
\begin_inset Quotes fld
\end_inset

divergent
\begin_inset Quotes frd
\end_inset

.
 Les tests sont faits avec un vecteur initial 
\begin_inset Quotes fld
\end_inset

uniforme
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
Avec un facteur ZAP nul, l'algorithme met 79 itérations pour converger alors
 qu'avec un facteur ZAP de 0.85 il suffit de 9 itérations.
\end_layout

\begin_layout Standard
Il est de plus à noter qu'avec un facteur ZAP de 0.85 la répartition des
 PageRank pour les différentes pages est assez uniforme alors qu'avec un
 ZAP nul les PageRank des nœuds 0, 1 et 2 sont deux fois plus élevés que
 ceux des nœuds 3, 4, 5 et 6.
 
\end_layout

\begin_layout Standard
Étant donné la forme du graphe, ce résultat n'est pas étonnant.
 En effet, avec un facteur ZAP proche de 1, la forme du graphe est très
 peu prise en compte dans le calcul du PageRank, le fait que les nœuds 0,
 1 et 2 forment une boucle n'influe que très peu sur les résultats dans
 ce cas là, alors qu'avec un facteur ZAP nul, seule la forme du graphe importe
 et la probabilité d'arriver sur l'un des nœuds de la boucle est deux fois
 plus élevée que pour les trois autres nœuds.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Sur certains graphes, un facteur zap non nul peut également faire converger
 pagerank vers des résultats plus intéressants, en éliminant par exemple
 les 
\begin_inset Quotes fld
\end_inset

puits
\begin_inset Quotes frd
\end_inset

, ces nœuds dont aucun lien ne sort, mais dont on peut alors 
\begin_inset Quotes fld
\end_inset

s'échapper
\begin_inset Quotes frd
\end_inset

.
\end_layout

\begin_layout Standard
Sur d'autres, il permet de faire converger pagerank vers une même solution
 quel que soit le vecteur initial, lorsque l'algorithme sans facteur zap
 diverge selon les cas (cf 
\family typewriter
circular
\family default
), ce qui tend à montrer que cette solution est effectivement judicieuse.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
D'une manière générale, même faible, un facteur zap non nul tend à améliorer
 la pertinence du résultat et la rapidité de son calcul.
\end_layout

\begin_layout Standard
Mais plus le facteur zap est élevé, plus la convergence est rapide et moins
 les résultats sont pertinents : les nœuds du graphes tendent alors à obtenir
 des valeurs proches.
 Il s'agit donc de trouver un juste équilibre dans le choix de ce facteur.
\end_layout

\begin_layout Section
Performance
\end_layout

\begin_layout Standard
Sur le fichier 
\family typewriter
web-Stanford.txt
\family default
, disponible à l'adresse 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://snap.stanford.edu/data/web-Stanford.html
\end_layout

\end_inset

, décrivant un graphe de près de 300 000 nœuds et de plus de 2 millions
 d'arcs, notre programme construit le graphe et calcule la matrice stochastique
 associée en quelques secondes et opère une centaine d'itérations de l'algorithm
e de pagerank en 10 à 20 secondes sur nos ordinateurs portables, ce qui
 nous semble parfaitement honorable.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Sur ce graphe, pagerank ne parvient pas à trouver un point fixe (en tout
 cas, pas en moins de 
\begin_inset Formula $1000$
\end_inset

 itérations).
\end_layout

\begin_layout Standard
On note néanmoins que le résultat converge sensiblement plus rapidement
 avec un vecteur initial 
\begin_inset Quotes fld
\end_inset

uniforme
\begin_inset Quotes frd
\end_inset

 et un facteur zap positif, et qu'on obtient assez rapidement des valeurs
 permettant de distinguer certains nœuds (par exemple, avec un facteur zap
 nul, certains nœuds sont très vites écartées avec une valeur nulle).
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Notons que sur une même ligne de la matrice stochastique d'un graphe, les
 cases non nulles ont toutes la même valeur (
\begin_inset Formula $1/\mathtt{degree}$
\end_inset

) ; il serait donc possible de compresser encore la taille de la représentation
 de cette matrice, en ne gardant de C qu'un tableau de longueur 
\begin_inset Formula $n$
\end_inset

, où 
\begin_inset Formula $n$
\end_inset

 est le nombre de ligne de la matrice.
\end_layout

\end_body
\end_document
